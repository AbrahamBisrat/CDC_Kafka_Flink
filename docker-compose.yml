version: '3.8'

x-logging: &logging
  driver: "json-file"
  options:
    max-size: "10m"
    max-file: "3"

services:
  postgres:
    image: debezium/example-postgres:1.1
    hostname: postgres
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - flink-network

  mysql:
    image: debezium/example-mysql:1.1
    hostname: mysql
    container_name: mysql
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=123456
      - MYSQL_USER=mysqluser
      - MYSQL_PASSWORD=mysqlpw
    networks:
      - flink-network

  elasticsearch:
    image: elastic/elasticsearch:7.6.0
    container_name: elasticsearch
    hostname: elasticsearch
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
    ports:
      - "9200:9200"
      - "9300:9300"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    networks:
      - flink-network

  kibana:
    image: elastic/kibana:7.6.0
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - flink-network

  kafka:
    image: bitnami/kafka:3.6
    container_name: kafka
    hostname: kafka
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_ENABLE_KRAFT=yes
    networks:
      - flink-network

  jobmanager:
    image: flink:1.17.1
    container_name: jobmanager
    hostname: jobmanager
    command: jobmanager
    ports:
      - "8081:8081"
    environment:
      - "FLINK_PROPERTIES=jobmanager.rpc.address: jobmanager"
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
    volumes:
      - ./connectors/flink-sql-connector-mysql-cdc-2.4.1.jar:/opt/flink/lib/flink-sql-connector-mysql-cdc-2.4.1.jar:rw
      - ./connectors/flink-sql-connector-postgres-cdc-2.4.1.jar:/opt/flink/lib/flink-sql-connector-postgres-cdc-2.4.1.jar:rw
      - ./connectors/flink-cdc-pipeline-connector-elasticsearch-3.2.0.jar:/opt/flink/lib/flink-cdc-pipeline-connector-elasticsearch-3.2.0.jar:rw
      - ./connectors/jackson-core-2.13.4.jar:/opt/flink/lib/jackson-core-2.13.4.jar:rw
      - ./connectors/jackson-annotations-2.13.4.jar:/opt/flink/lib/jackson-annotations-2.13.4.jar:rw
      - ./connectors/jackson-databind-2.13.4.jar:/opt/flink/lib/jackson-databind-2.13.4.jar:rw
      - ./connectors/connect-api-3.6.0.jar:/opt/flink/lib/connect-api-3.6.0.jar:rw
      # - ./connectors/debezium-connector-mysql-2.4.1.Final.jar:/opt/flink/lib/debezium-connector-mysql-2.4.1.Final.jar:rw
      - ./connectors/kafka-clients-3.5.1.jar:/opt/flink/lib/kafka-clients-3.5.1.jar:rw
      - ./connectors/debezium-api-2.4.1.Final.jar:/opt/flink/lib/debezium-api-2.4.1.Final.jar:rw
      - ./connectors/flink-connector-kafka-1.17.1.jar:/opt/flink/lib/flink-connector-kafka-1.17.1.jar:rw
      - ./connectors/flink-sql-connector-kafka-1.17.1.jar:/opt/flink/lib/flink-sql-connector-kafka-1.17.1.jar:rw
      # - ./jobs/job.sql:/opt/flink/job.sql
    networks:
      - flink-network

  taskmanager:
    image: flink:1.17.1
    container_name: taskmanager
    hostname: taskmanager
    command: taskmanager
    environment:
      - "FLINK_PROPERTIES=jobmanager.rpc.address: jobmanager"
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
      - TASK_MANAGER_NUMBER_OF_TASK_SLOTS=6
    depends_on:
      - jobmanager
    volumes:
      - ./connectors/flink-sql-connector-mysql-cdc-2.4.1.jar:/opt/flink/lib/flink-sql-connector-mysql-cdc-2.4.1.jar:rw
      - ./connectors/flink-sql-connector-postgres-cdc-2.4.1.jar:/opt/flink/lib/flink-sql-connector-postgres-cdc-2.4.1.jar:rw
      - ./connectors/flink-cdc-pipeline-connector-elasticsearch-3.2.0.jar:/opt/flink/lib/flink-cdc-pipeline-connector-elasticsearch-3.2.0.jar:rw
      - ./connectors/jackson-core-2.13.4.jar:/opt/flink/lib/jackson-core-2.13.4.jar:rw
      - ./connectors/jackson-annotations-2.13.4.jar:/opt/flink/lib/jackson-annotations-2.13.4.jar:rw
      - ./connectors/jackson-databind-2.13.4.jar:/opt/flink/lib/jackson-databind-2.13.4.jar:rw
      - ./connectors/connect-api-3.6.0.jar:/opt/flink/lib/connect-api-3.6.0.jar:rw
      # - ./connectors/debezium-connector-mysql-2.4.1.Final.jar:/opt/flink/lib/debezium-connector-mysql-2.4.1.Final.jar:rw
      - ./connectors/kafka-clients-3.5.1.jar:/opt/flink/lib/kafka-clients-3.5.1.jar:rw
      - ./connectors/debezium-api-2.4.1.Final.jar:/opt/flink/lib/debezium-api-2.4.1.Final.jar:rw
      - ./connectors/flink-connector-kafka-1.17.1.jar:/opt/flink/lib/flink-connector-kafka-1.17.1.jar:rw
      - ./connectors/flink-sql-connector-kafka-1.17.1.jar:/opt/flink/lib/flink-sql-connector-kafka-1.17.1.jar:rw
    networks:
      - flink-network

networks:
  flink-network:
    driver: bridge